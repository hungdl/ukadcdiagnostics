<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="ukadc.diagnostics" type="Ukadc.Diagnostics.Configuration.UkadcDiagnosticsSection, Ukadc.Diagnostics"/>
  </configSections>
  <system.diagnostics>
    <sources>
      <source name="source1" switchValue="All">
        <listeners>
          <add name="inMemoryListener"/>
        </listeners>
      </source>
      <source name="source2" switchValue="All">
        <listeners>
          <add name="inMemoryListener" />
        </listeners>
      </source>
      <source name="source3" switchValue="All">
        <listeners>
          <add name="inMemoryListener2" />
        </listeners>
      </source>
      <source name="source4" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener3">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter1"/>
          </add>
        </listeners>
      </source>
      <source name="source5" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter2"/>
          </add>
        </listeners>
      </source>
      <source name="source6" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter3"/>
          </add>
        </listeners>
      </source>
      <source name="source6" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter3"/>
          </add>
        </listeners>
      </source>
      <source name="source7" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter4"/>
          </add>
        </listeners>
      </source>
      <source name="source8" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter5"/>
          </add>
        </listeners>
      </source>
      <source name="source9" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="propertyFilter6"/>
          </add>
        </listeners>
      </source>
      <source name="source10" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
            <filter type="Ukadc.Diagnostics.Filters.PropertyFilter, Ukadc.Diagnostics" initializeData="nonsenseReference"/>
          </add>
        </listeners>
      </source>
      <source name="source11" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.SqlTraceListener, Ukadc.Diagnostics" name="sqlTraceListener" initializeData="stlSource11" />
        </listeners>
      </source>
      <source name="source12" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.SqlTraceListener, Ukadc.Diagnostics" name="sqlTraceListener" initializeData="stlSource12" />
        </listeners>
      </source>
      <source name="source13" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.SmtpTraceListener, Ukadc.Diagnostics" name="smtpTraceListener" initializeData="mySmtpConfig" >
            <!-- filter out most events to avoid errors in the unit tests (no SMTP server available) -->
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Critical"/>
          </add>
        </listeners>
      </source>
      <source name="source14" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.FileTraceListener, Ukadc.Diagnostics" name="fileTraceListener" 
               filePath="log.txt" cleanInterval="00:00:01" output="{ActivityId}"/>
        </listeners>
      </source>
      <source name="source15" switchValue="All">
        <listeners>
          <add type="Ukadc.Diagnostics.Listeners.ProxyTraceListener, Ukadc.Diagnostics" name="proxyTraceListener"
               initializeData="customWcfClient"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener">
        <filter type="Ukadc.Diagnostics.Filters.MultiFilter, Ukadc.Diagnostics" initializeData="myGroup"/>
      </add>
      <add type="Ukadc.Diagnostics.Listeners.InMemoryTraceListener, Ukadc.Diagnostics" name="inMemoryListener2">
        <filter type="Ukadc.Diagnostics.Filters.MultiFilter, Ukadc.Diagnostics" initializeData="anotherGroup"/>
      </add>
    </sharedListeners>
  </system.diagnostics>
  <ukadc.diagnostics>
    <filterGroups>
      <filterGroup name="myGroup" logic="And">
        <filters>
          <filter type="System.Diagnostics.EventTypeFilter" initializeData="Critical" />
          <filter type="System.Diagnostics.SourceFilter" initializeData="source1" />
          <!--
          This would create an infinitely recursive multifilter and throw a nasty stack overflow exception
          <filter name="filterC" type="Ukadc.Diagnostics.Filters.MultiFilter, Ukadc.Diagnostics" initializeData="myGroup" />
          -->
        </filters>
      </filterGroup>
      <filterGroup name="anotherGroup" logic="And">
        <filters>
          <filter type="System.Diagnostics.EventTypeFilter" initializeData="Critical" negate="true" />
          <!--
          This would create an infinitely recursive multifilter and throw a nasty stack overflow exception
          <filter name="filterC" type="Ukadc.Diagnostics.Filters.MultiFilter, Ukadc.Diagnostics" initializeData="myGroup" />
          -->
        </filters>
      </filterGroup>
    </filterGroups>
    <propertyFilters>
      <propertyFilter name="propertyFilter1" propertyToken="{Message}" operation="Contains" value="expected value" />
      <propertyFilter name="propertyFilter2" propertyToken="{Message}" operation="=" value="hello">
        <dynamicProperty sourceType="TestingConfigurationErrorsException" propertyName="StringProperty" />
      </propertyFilter>
      <propertyFilter name="propertyFilter3" operation="=" value="this should match">
        <dynamicProperty sourceType="Ukadc.Diagnostics.Tests.Filters.DummyDataObject, Ukadc.Diagnostics.Tests" propertyName="StringProperty" />
      </propertyFilter>
      <propertyFilter name="propertyFilter4" propertyToken="{Id}" operation=">=" value="1" />
      <!-- because of the way TraceEventType is numbered we have to use LessThanOrEqualTo here.. -->
      <propertyFilter name="propertyFilter5" propertyToken="{CustomToken}" operation="LessThanOrEqualTo" value="Error" />
      <propertyFilter name="propertyFilter6" operation="=" value="this should match" defaultEvaluation="false">
        <dynamicProperty sourceType="Ukadc.Diagnostics.Tests.Filters.DummyDataObject, Ukadc.Diagnostics.Tests" propertyName="StringProperty" />
      </propertyFilter>
    </propertyFilters>
    <sqlTraceListeners>
      <sqlTraceListener name="stlSource11" 
          commandType="Text" commandText="COMMAND-TEXT"
          connectionStringName="connString1">
        <parameters>
          <parameter name="@message" propertyToken="{Message}" />
          <parameter name="@id" propertyToken="{Id}" />
          <parameter name="@dynamic">
            <dynamicProperty sourceType="System.String, mscorlib" propertyName="Length" />
          </parameter>
        </parameters>
      </sqlTraceListener>
      <sqlTraceListener name="stlSource12"
          commandType="Text" commandText="INSERT INTO TestLog (ActivityId, Level, EventType, DynamicColumn) VALUES (@ActivityId, @Level, @EventType, @DynamicValue)"
          connectionStringName="connString2">
        <parameters>
          <parameter name="@ActivityId" propertyToken="{ActivityId}" />
          <parameter name="@Level" propertyToken="{EventType}" />
          <parameter name="@EventType" propertyToken="{EventType}" callToString="True" />
          <parameter name="@DynamicValue">
            <dynamicProperty sourceType="System.TimeSpan, mscorlib" propertyName="TotalMilliseconds" />
          </parameter>
        </parameters>
      </sqlTraceListener>
    </sqlTraceListeners>
    <smtpTraceListeners>
      <smtpTraceListener name="mySmtpConfig" host="localhost" port="25" from="from@address.com" to="to@address.com"
                         subject="Logging message (literal only)" username="username" password="password"
                         body="{Message}" />
    </smtpTraceListeners>
    <tokens>
      <token name="CustomToken" type="Ukadc.Diagnostics.Tests.Filters.CustomPropertyReader, Ukadc.Diagnostics.Tests" />
      <token name="DynamicToken">
        <dynamicProperty sourceType="System.TimeSpan, mscorlib" propertyName="TotalMilliseconds" />
      </token>
      <token name="CombinedToken" format="{EventType}, {Message} - {Id}" />
    </tokens>
  </ukadc.diagnostics>
  <system.serviceModel>
    <client>
      <endpoint address="net.pipe://localhost/ProxyTraceService2/"
                bindingConfiguration="noSecureTransport"
                binding="netNamedPipeBinding"
                contract="Ukadc.Diagnostics.Listeners.IProxyTraceService" 
                name="customWcfClient"/>
    </client>
    <bindings>
      <netNamedPipeBinding>
        <binding name="noSecureTransport">
          <security mode="None" />
        </binding>
      </netNamedPipeBinding>
    </bindings>
  </system.serviceModel>
  <connectionStrings>
    <add name="connString1" connectionString="CONNECTION-STRING" />
    <add name="connString2" connectionString="Data Source=.\SQLEXPRESS; Integrated Security=True;AttachDbFilename=|DataDirectory|\TestAX307.mdf;Initial Catalog=TestAX307"/>
  </connectionStrings>
</configuration>